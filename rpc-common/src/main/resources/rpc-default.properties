#==============================
# RPC框架默认配置文件
#==============================

#---------- 基础配置 ----------
# 应用名称
rpc.application.name=default-rpc-app
# 应用所有者
rpc.application.owner=unknown
# 环境类型: dev, test, prod
rpc.environment=dev
# 应用组
rpc.application.group=default
# 应用版本号
rpc.application.version=1.0.0

#---------- 服务注册与发现 ----------
# 服务注册中心类型: consul, zookeeper, local
rpc.registry=local
# 是否注册
rpc.registry.register=true
# 是否订阅
rpc.registry.subscribe=true
# 注册中心地址
rpc.registry.address=N/A
# 注册中心会话超时(毫秒)
rpc.registry.timeout=5000
# 注册中心连接重试次数
rpc.registry.retry.times=3
# 注册中心重试间隔(毫秒)
rpc.registry.retry.interval=1000
# 是否启用本地回退模式
rpc.registry.local.fallback=true

# Consul配置
rpc.registry.consul.host=localhost
rpc.registry.consul.port=8500
rpc.registry.consul.timeout=10000
rpc.registry.consul.check.interval=10
rpc.registry.consul.deregister.time=90

# ZooKeeper配置
rpc.registry.zookeeper.address=127.0.0.1:2181
rpc.registry.zookeeper.session.timeout=40000
rpc.registry.zookeeper.connection.timeout=10000

#---------- 负载均衡 ----------
# 负载均衡策略: consistentHash, random, roundRobin, leastActive
rpc.loadbalance=random
rpc.loadbalance.consistentHash.virtualNodes=160
rpc.loadbalance.consistentHash.algorithm=murmur3
rpc.loadbalance.random.weight.enable=false
rpc.loadbalance.roundRobin.weightMode=static

#---------- 序列化 ----------
# 序列化方式: json, hessian, protobuf, kryo
rpc.serializer=json

#---------- 网络传输 ----------
# 网络传输框架: netty
rpc.transport=netty
# 默认端口
rpc.transport.port=9000
# 默认绑定IP
rpc.transport.bind.ip=0.0.0.0
# 最大连接数
rpc.transport.maxConnections=16
# 请求超时时间(毫秒)
rpc.transport.timeout=5000
# 连接空闲超时时间(毫秒)
rpc.transport.idle.timeout=30000
# 心跳间隔(毫秒)
rpc.transport.heartbeat.interval=15000
# Boss线程数
rpc.transport.boss.threads=1
# Worker线程数
rpc.transport.worker.threads=4

#---------- 压缩 ----------
# 是否启用压缩
rpc.compress.enable=false
# 压缩算法: gzip, snappy
rpc.compress.type=gzip
# 启用压缩的阈值(字节)，超过此大小才进行压缩
rpc.compress.size.threshold=2048

#---------- 线程池 ----------
# IO线程池大小
rpc.threadpool.io.threads=4
# 业务线程池核心线程数
rpc.threadpool.core.size=10
# 业务线程池最大线程数
rpc.threadpool.max.size=100
# 业务线程池队列大小
rpc.threadpool.queue.size=1000
# 业务线程池线程保活时间(秒)
rpc.threadpool.keepalive.seconds=60
# 线程池类型: fixed, cached, eager, limited
rpc.threadpool.type=fixed

#---------- 容错 ----------
# 重试策略: failfast, failover, failsafe
rpc.cluster=failfast
# 集群容错模式
rpc.cluster.mode=failfast
# 最大重试次数
rpc.cluster.retries=2
# 是否启用熔断器
rpc.circuit.breaker.enable=false
# 熔断器错误阈值比例
rpc.circuit.breaker.error.threshold=50
# 熔断器最小请求数
rpc.circuit.breaker.request.threshold=20
# 熔断器重置时间窗口(毫秒)
rpc.circuit.breaker.sleep.window=5000
# 熔断后自动恢复时间(毫秒)
rpc.circuit.breaker.recovery.interval=30000

#---------- 限流降级 ----------
# 是否启用限流
rpc.ratelimit.enable=false
# 单机最大QPS
rpc.ratelimit.max.qps=1000
# 限流算法: token_bucket, leaky_bucket, sliding_window
rpc.ratelimit.algorithm=token_bucket

#---------- 监控 ----------
# 是否启用监控
rpc.monitor.enable=false
# 监控数据发送间隔(毫秒)
rpc.monitor.interval=60000
# 监控地址
rpc.monitor.address=localhost:7070
# 监控实现类型: simple, prometheus
rpc.monitor.type=simple

#---------- 日志追踪 ----------
# 是否启用分布式追踪
rpc.trace.enable=false
# 追踪类型: zipkin, jaeger
rpc.trace.type=zipkin
# Zipkin地址
rpc.trace.zipkin.baseUrl=http://localhost:9411/api/v2/spans
# 采样率(0-1.0)
rpc.trace.sample.rate=0.1
# 追踪上报方式: http, kafka
rpc.trace.report.mode=http

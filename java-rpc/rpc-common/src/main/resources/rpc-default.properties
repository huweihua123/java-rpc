#==============================
# RPC框架默认配置文件
#==============================

#---------- 基础配置 ----------
# 应用名称
rpc.application.name=default-rpc-app
# 应用所有者
rpc.application.owner=unknown
# 环境类型: dev, test, prod
rpc.environment=dev
# 应用组
rpc.application.group=default
# 应用版本号
rpc.application.version=1.0.0

#---------- 服务注册与发现 ----------
# 服务注册中心类型: consul, zookeeper, local
rpc.registry=local
# 是否注册
rpc.registry.register=true
# 是否订阅
rpc.registry.subscribe=true
# 注册中心地址
rpc.registry.address=N/A
# 注册中心会话超时(毫秒)
rpc.registry.session.timeout=60000

#---------- Consul配置 ----------
# Consul主机
rpc.registry.consul.host=localhost
# Consul端口
rpc.registry.consul.port=8500
# Consul超时(毫秒)
rpc.registry.consul.timeout=10000
# Consul连接超时(毫秒)
rpc.registry.consul.connect.timeout=5000
# Consul写入超时(毫秒)
rpc.registry.consul.write.timeout=10000
# Consul检查间隔
rpc.registry.consul.check.interval=10s
# Consul检查超时
rpc.registry.consul.check.timeout=5s
# Consul注销时间
rpc.registry.consul.deregister.time=30s
# Consul同步周期(秒)
rpc.registry.consul.sync.period=30

#---------- ZooKeeper配置 ----------
# ZooKeeper地址
rpc.registry.zookeeper.address=127.0.0.1:2181
# ZooKeeper会话超时(毫秒)
rpc.registry.zookeeper.session.timeout=40000
# ZooKeeper连接超时(毫秒)
rpc.registry.zookeeper.connection.timeout=10000
# ZooKeeper重试基础睡眠时间(毫秒)
rpc.registry.zookeeper.retry.base.sleep=1000
# ZooKeeper最大重试次数
rpc.registry.zookeeper.retry.max.times=3
# ZooKeeper根路径
rpc.registry.zookeeper.root.path=MyRPC

#---------- 服务提供者配置 ----------
# 服务提供者主机(auto表示自动获取)
rpc.provider.host=auto
# 服务提供者端口
rpc.provider.port=9999
# IO线程数
rpc.provider.io.threads=8
# 工作线程数
rpc.provider.worker.threads=200
# 最大连接数
rpc.provider.max.connections=10000
# 连接空闲时间(毫秒)
rpc.provider.connection.idle.time=300000
# 动态注册
rpc.provider.dynamic=true
# 延迟注册
rpc.provider.delay.register=false
# 延迟注册时间(毫秒)
rpc.provider.delay.register.time=5000
# 元数据启用
rpc.provider.metadata.enabled=true

#---------- 服务消费者配置 ----------
# 默认超时(毫秒)
rpc.consumer.timeout=3000
# 接口超时(毫秒)
rpc.consumer.interfaces.timeout=5000
# 负载均衡策略: random, roundrobin, consistenthash
rpc.consumer.loadbalance=random
# 降级策略: failover, failfast, failsafe
rpc.consumer.downgrade=failover
# 通用调用启用
rpc.consumer.generic.enable=false
# 连接池最大空闲
rpc.consumer.pool.max.idle=16
# 连接池最小空闲
rpc.consumer.pool.min.idle=4
# 连接空闲超时(毫秒)
rpc.consumer.connection.idle.timeout=300000
# 连接重试次数
rpc.consumer.connection.retry=3
# 连接池启用
rpc.consumer.connection.pool.enable=true
# 熔断器失败阈值
rpc.consumer.circuit.breaker.failures=5
# 熔断器错误率
rpc.consumer.circuit.breaker.error.rate=0.5
# 熔断器窗口大小(秒)
rpc.consumer.circuit.breaker.window=60
# 熔断器成功阈值
rpc.consumer.circuit.breaker.success.threshold=3
# 重试启用
rpc.consumer.retry.enable=true
# 重试最大次数
rpc.consumer.retry.max.times=3
# 重试间隔(毫秒)
rpc.consumer.retry.interval=1000
# 重试使用新连接
rpc.consumer.retry.new.connection=false

#---------- 心跳配置 ----------
# 读空闲时间(单位由rpc.heartbeat.time.unit指定)
rpc.heartbeat.reader.idle.time=0
# 写空闲时间(单位由rpc.heartbeat.time.unit指定)
rpc.heartbeat.writer.idle.time=8
# 全部空闲时间(单位由rpc.heartbeat.time.unit指定)
rpc.heartbeat.all.idle.time=0
# 时间单位: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS
rpc.heartbeat.time.unit=SECONDS

#---------- 序列化配置 ----------
# 默认序列化方式: json, protostuff, kryo, hessian2, jdk
rpc.serializer=json

#---------- 限流配置 ----------
# 默认限流参数
rpc.ratelimit.default.rate=10
rpc.ratelimit.default.capacity=200

#---------- 配置刷新 ----------
# 配置刷新周期(秒)
rpc.config.refresh.period=60
# 自动刷新配置
rpc.config.auto.refresh=true

#---------- 监控配置 ----------
# 监控类型
rpc.monitor.type=simple

#---------- 日志追踪 ----------
# 是否启用分布式追踪
rpc.trace.enable=false
# 追踪类型: zipkin, jaeger
rpc.trace.type=zipkin
# Zipkin地址
rpc.trace.zipkin.baseUrl=http://localhost:9411/api/v2/spans
# 采样率(0-1.0)
rpc.trace.sample.rate=0.1
# 追踪上报方式: http, kafka
rpc.trace.report.mode=http
# 追踪上下文清理配置
rpc.trace.cleaner.initial.delay=60
rpc.trace.cleaner.period=60
rpc.trace.context.max.age=300
rpc.trace.context.max.size=10000